events {
    worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  # server {
  #   listen 80;
  #   server_name localhost;
  #   add_header Strict-Transport-Security max-age=15768000;
  #   return 301 https://$server_name$request_uri;
  # }

  server {
    listen 80;
    listen 443 ssl;

    server_name localhost;

    # ssl on;
    #证书路径
    ssl_certificate      /etc/nginx/ssl/server.crt;
    #私钥路径
    ssl_certificate_key  /etc/nginx/ssl/server_nopwd.key;
    #储存SSL会话的缓存类型和大小
    ssl_session_cache    shared:SSL:1m;
    #缓存有效期
    ssl_session_timeout  5m;
    #安全链接可选的加密协议
    ssl_protocols        SSLv2 SSLv3 TLSv1.2;
    #可选的加密算法,顺序很重要,越靠前的优先级越高.
    ssl_ciphers          HIGH:!aNULL:!MD5;
    #在 SSLv3 或 TLSv1 握手过程一般使用客户端的首选算法,如果启用下面的配置,则会使用服务器端的首选算法.
    ssl_prefer_server_ciphers  on;

    # 开启gzip
    gzip on;
    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    gzip_min_length 1k;
    # gzip 压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
    gzip_comp_level 2;
    # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;
    # 禁用IE 6 gzip
    gzip_disable "MSIE [1-6]\.";

    root /app/raccoon;

    location ~ .*\.(js|css|map|json)?$ {
      expires 30d;  
      access_log off;
    }

    location ~ .*\.(eot|ttf|woff|svg|otf)$ {
      expires 30d;
      access_log off;
    }


    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$ {
      expires 30d;
      access_log off;
    }

    location ^~ /ajax/ {
      proxy_pass http://groot:9000;
    }

    location ^~ /ws/ {
      proxy_pass ws://groot:9000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location / {
      index index.html;
      try_files $uri $uri/ /index.html;
    }
  }
}
